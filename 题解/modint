ll power(ll u, ll v) {
    ll res = 1;
    while (v) {
        if (v & 1) {
            res = res * u % MOD;
        }
        u = u * u % MOD;
        v >>= 1;
    }
    return res;
}

void init() {
    fac[0] = 1;
    for (int i = 1; i <= MN; i++) {
        fac[i] = fac[i - 1] * i % MOD;
    }
    inv_fac[MN] = power(fac[MN], MOD - 2);
    for (int i = MN - 1; i >= 0; i--) {
        inv_fac[i] = inv_fac[i + 1] * (i + 1) % MOD;
    }
}

ll C(int n, int k) {
    if (n < k) {
        return 0;
    }
    return (fac[n] * inv_fac[k] % MOD) * inv_fac[n - k] % MOD;
}

void add(ll &u, ll v) {
    u += v;
    if (u >= MOD) {
        u -= MOD;
    }
    if (u < 0) {
        u += MOD;
    }
}

ll sum(ll u, ll v) {
    add(u, v);
    return u;
}

void mul(ll &u, ll v) {
    u = u * v % MOD;
}

ll prod(ll u, ll v) {
    mul(u, v);
    return u;
}